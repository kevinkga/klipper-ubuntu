# This is a Klipper configuration for TronXY X5SA Pro CoreXY Printer
# 330x330x400 size with CXY-V6 motherboard, Tronxy blue self-levelling plate sensor
# and stock Titan Extruder Clone.

###########################################################
# CAUTION: The Touchscreen cannot be used with Klipper!!! #
# You will lose all the display functionalities!!!        #
###########################################################

#            === FLASHING WITH STOCK BOOTLOADER ===
# You should make firmware for STM32F103 with bootloader offset
# at 0x8008800 (Chitu v6 Bootloader) and serial (on USART1 PA10/PA9)
# communication.

# Use "./scripts/update_chitu.py ./out/klipper.bin ./out/update.cbd"
# after make to generate update.cbd.  Put "update.cbd" file onto SD card,
# and reboot the printer.
# It will be automatically installed after you hear 2 beeps,
# and you will be able to update it this way.

# See docs/Config_Reference.md for a description of parameters.

[mcu]
#baud: 115200
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3000
max_z_velocity: 25
max_z_accel: 30

[stepper_x]
step_pin: PE5
dir_pin: !PE6
enable_pin: !PC13
microsteps: 32
rotation_distance: 40
endstop_pin: !PG10
position_endstop: -1
position_min: -1
position_max: 350 # for bed mesh
homing_speed: 50
homing_retract_dist: 10
second_homing_speed: 10.0

[stepper_y]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PE4
microsteps: 32
rotation_distance: 40
endstop_pin: !PA12
position_endstop: 0
position_max: 330
homing_retract_dist: 10
homing_speed: 50.0
second_homing_speed: 10.0

[stepper_z]
step_pin: PB9
dir_pin: PE0
enable_pin: !PE1
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 400
position_min: -2

[extruder]
step_pin: PB4
dir_pin: PB5 # for the orbiter extruder motor
enable_pin: !PB8
microsteps: 16
gear_ratio: 7:5
rotation_distance: 6
full_steps_per_rotation: 200
max_extrude_only_velocity: 60
nozzle_diameter: 0.800
filament_diameter: 1.750
heater_pin: PG12
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA1
control: pid
pid_Kp: 18.831
pid_Ki: 0.821
pid_Kd: 108.044
min_temp: 0
max_temp: 260
max_extrude_only_distance: 350

[heater_bed]
heater_pin: PG11
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
min_temp: 0
max_temp: 130
control: pid
pid_Kp: 73.932
pid_Ki: 1.521
pid_Kd: 898.279

[heater_fan hotend_fan]
pin: PG13
heater_temp: 50.0
fan_speed: 1.0


[fan]
pin: PG14

[controller_fan drivers_fan]
pin: PD6

[filament_switch_sensor filament_sensor]
pause_on_runout: True
runout_gcode:
  M25
switch_pin: !PA15

[output_pin beeper]
pin: PB0

[safe_z_home]
home_xy_position: 165,165
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_screws]
screw1: 5,5
screw2: 165,5
screw3: 325,5
screw4: 5,325
screw5: 165,325
screw6: 325,325

[bed_mesh]
speed: 120
probe_count: 5,5
horizontal_move_z: 5
algorithm: lagrange
mesh_min : 20,20
mesh_max : 310,310
mesh_pps: 0

[probe]
x_offset: -35
y_offset: 0
pin: !PG9
speed: 30
z_offset: 2.5


[virtual_sdcard]
path: {{ klipper_user_home }}/gcode_files

[pause_resume]

[display_status]

{% raw %}
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TIMELAPSE_NEW_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}
 ; leave this in a separate macro!

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
  ;SAVE_GCODE_STATE NAME=SNAPSHOT
  ;M117 move your head/bed here, do retracts and so on
  ;G4 P500 ;dwell
  _TIMELAPSE_NEW_FRAME
  ;G4 P500 ;moar dwelling
  ;M117 don't forget to un-retract!
  ;RESTORE_GCODE_STATE NAME=SNAPSHOT
{% endraw %}
